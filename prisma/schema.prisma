// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(cuid())
  createdAt Int
  updatedAt Int

  email String @unique @db.VarChar(50)
  name  String @db.VarChar(50)
  hash  String
  level String @default("user") @db.VarChar(10)

  Session            Session[]
  Product            Product[]
  TransactionHistory TransactionHistory[]

  @@map("users")
}

model Session {
  id        String @id @default(cuid())
  createdAt Int
  updatedAt Int

  userAgent String
  hashToken String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Product {
  id        String @id @default(cuid())
  createdAt Int
  updatedAt Int

  name        String @db.VarChar(200)
  description String
  price       Int
  amount      Int
  unit        String @db.VarChar(20)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  TransactionProduct TransactionProduct[]

  @@map("products")
}

model TransactionProduct {
  id String @id @default(cuid())

  productSold Int

  transactionHistoryId String
  transactionHistory   TransactionHistory @relation(fields: [transactionHistoryId], references: [id], onDelete: Cascade)

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("transaction_products")
}

model TransactionHistory {
  id        String @id @default(cuid())
  createdAt Int

  moneyPaid Int

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  TransactionProduct TransactionProduct[]

  @@map("transaction_histories")
}
